/* === DialogOverlay === */
.dialog-overlay {
  position: fixed;
  inset: 0;
  z-index: 50;
  background-color: rgba(0, 0, 0, 0.5);

  &[data-state="open"] {
    animation: fadeIn 200ms ease-out;
  }

  &[data-state="closed"] {
    animation: fadeOut 200ms ease-in;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* === DialogContent === */
.dialog-content {
  background-color: var(--c-bg-secondary);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 50;
  display: grid;
  width: 100%;
  max-width: min(40rem, calc(100% - 2rem));
  gap: 1.5rem;
  border-radius: 0.5rem;
  border: 1px solid #ccc;
  padding: 2rem;
  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
  transition-duration: 200ms;

  @media (width >= 768px) {
    max-width: 32rem;
  }

  &[data-state="open"] {
    animation: zoomIn 200ms ease-out;
  }

  &[data-state="closed"] {
    animation: zoomOut 200ms ease-in;
  }
}

.dialog-sidebar {
  display: grid;
  gap: 2rem;
  padding-block: var(--spacing-8);
  border-radius: 1rem;
  position: fixed;
  top: 50%;
  left: 50%;
  z-index: 50;
  background-color: var(--c-bg-secondary);
  transform: translate(-50%, -50%);

  @media (width >= 768px) {
    max-width: 32rem;
  }

  &[data-state="open"] {
    animation: zoomIn 200ms ease-out;
  }

  &[data-state="closed"] {
    animation: zoomOut 200ms ease-in;
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes zoomOut {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
}

/* === DialogClose === */
.dialog-close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  border-radius: 0.25rem;
  opacity: 0.7;
  transition: opacity 0.2s;

  &:hover {
    opacity: 1;
  }

  &:focus {
    outline: none;
    box-shadow:
      0 0 0 2px var(--c-bg-error),
      0 0 0 4px var(--c-error);
  }

  &:disabled {
    pointer-events: none;
  }

  & svg {
    pointer-events: none;
    flex-shrink: 0;
  }

  & svg:not([class*="size-"]) {
    width: 1rem;
    height: 1rem;
  }
}

.dialog-close-group {
  border-radius: 0.25rem;
  opacity: 0.7;
  transition: opacity 0.2s;

  &:hover {
    opacity: 1;
  }

  &:focus {
    outline: none;
    box-shadow:
      0 0 0 2px var(--c-bg-error),
      0 0 0 4px var(--c-error);
  }

  &:disabled {
    pointer-events: none;
  }

  & svg {
    pointer-events: none;
    flex-shrink: 0;
  }

  & svg:not([class*="size-"]) {
    width: 1rem;
    height: 1rem;
  }
}

/* === DialogHeader === */
.dialog-header {
  display: flex;
  flex-direction: column;
  position: relative;
  gap: 0.5rem;
  text-align: center;

  @media (width >= 768px) {
    text-align: left;
  }
}

.dialog-header-row {
  flex-direction: row;
  justify-content: space-between;
}

/* === DialogFooter === */
.dialog-footer {
  display: flex;
  flex-direction: column-reverse;
  gap: 0.5rem;

  @media (width >= 768px) {
    flex-direction: row;
    justify-content: flex-end;
  }
}

/* === DialogTitle === */
.dialog-title {
  font-size: var(--fs-h4);
  font-weight: var(--fw-heading);
  line-height: 1;
  color: var(--c-heading);
}

.destructive-dialog-title {
  color: var(--c-bg-error);
}

.sidebar-dialog-title {
  padding-inline: var(--padding-inline);
  color: var(--c-bg-error);
}

/* === DialogDescription === */
.dialog-description {
  font-size: var(--fs-root);
}
